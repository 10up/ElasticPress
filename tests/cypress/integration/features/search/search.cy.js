describe('Post Search Feature', () => {
	before(() => {
		cy.wpCli('elasticpress sync --setup --yes');
	});

	it('Can use Elasticsearch for the default WP search', () => {
		cy.login();

		cy.visit('/?s=test');

		// eslint-disable-next-line jest/valid-expect-in-promise
		cy.get('#debug-menu-target-EP_Debug_Bar_ElasticPress')
			.invoke('text')
			.then((debugText) => {
				expect(debugText).to.contain('Query Response Code: HTTP 200');
				expect(debugText).not.to.contain('Query Response Code: HTTP 4');
				expect(debugText).not.to.contain('Query Response Code: HTTP 5');
			});
	});

	it('Can see exact matches showing higher', () => {
		cy.login();

		const postsData = [
			{
				title: 'Higher',
				content: '10up loves elasticpress',
			},
			{
				title: 'Lower',
				content: 'elasticpress loves 10up',
			},
		];

		postsData.forEach((postData) => {
			cy.publishPost(postData);
		});

		cy.visit('/?s=10up+loves+elasticpress');
		cy.contains('.site-content article:nth-of-type(1) h2', 'Higher').should('exist');
		cy.contains('.site-content article h2', 'Lower').should('exist');
	});

	it('Can see newer matches showing higher', () => {
		cy.login();

		const attempt = Cypress._.get(cy.state('runnable'), '_currentRetry', 0);
		const postTitle = `Duplicated post Attempt #${attempt}`;

		/**
		 * Given the fact that score will only decay for posts older than 7 days by default, we
		 * create two posts with 1 month of difference. Using WP-CLI here to make it easier to set a date.
		 */

		// With these options, we can create dates in the 'YYYY-MM-DD HH:mm:ss' format expected by WP-CLI.
		const dateFormat = {
			year: 'numeric',
			month: '2-digit',
			day: '2-digit',
			hour: '2-digit',
			hour12: false,
			minute: '2-digit',
			second: '2-digit',
		};

		const oneMonthAgo = new Date(+new Date() - 2678400000)
			.toLocaleString('en-CA', dateFormat)
			.replace(',', '');
		cy.wpCli(
			`post create --post_title='${postTitle}' --post_content='Lorem ipsum veritas dolor ${attempt}' --post_author=1 --post_status='publish' --post_date='${oneMonthAgo}'`,
		);

		// To avoid any problems with timezones, let's just create it as yesterday.
		const yesterday = new Date(+new Date() - 86400000)
			.toLocaleString('en-CA', dateFormat)
			.replace(',', '');
		cy.wpCli(
			`post create --post_title='${postTitle}' --post_content='Lorem ipsum veritas dolor ${attempt}' --post_author=1 --post_status='publish' --post_date='${yesterday}'`,
		);

		/**
		 * Give Elasticsearch some time to process the new posts.
		 *
		 * @todo instead of waiting for an arbitrary time, we should ensure the posts were processed OR retry the next block.
		 */
		// eslint-disable-next-line cypress/no-unnecessary-waiting
		cy.wait(2000);

		cy.visit(`/?s=duplicated+post+attempt+${attempt}`);
		cy.contains('.site-content article:nth-of-type(1) h2', postTitle).should('exist');
		cy.contains('.site-content article:nth-of-type(2) h2', postTitle).should('exist');

		// Comparing post IDs but the HTML id generated by the theme.
		cy.get('.site-content article:nth-of-type(1)')
			.invoke('attr', 'id')
			.then((htmlIdFirstPost) => {
				const firstPostIdInWordPress = htmlIdFirstPost.replace('post-', '');
				cy.get('.site-content article:nth-of-type(2)')
					.invoke('attr', 'id')
					.then((htmlIdSecondPost) => {
						const secondPostIdInWordPress = htmlIdSecondPost.replace('post-', '');
						expect(+firstPostIdInWordPress).to.be.greaterThan(+secondPostIdInWordPress);
					});
			});
	});

	it('Can see highlighted text', () => {
		cy.login();
		cy.visitAdminPage('admin.php?page=elasticpress');
		cy.get('.ep-feature-search .settings-button').click();
		cy.get('.ep-feature-search [name="settings[highlight_excerpt]"][value="1"]').click();
		cy.get('.ep-feature-search .button-primary').click();

		cy.publishPost({
			title: 'test highlight color',
			content: 'findme findme findme',
		});

		cy.visit('/?s=findme');

		cy.get('.ep-highlight').should('be.visible');
	});

	it('Can search password protected post', () => {
		cy.login();

		cy.publishPost({
			title: 'Password Protected',
			password: 'password',
		});

		// Admin can see post on front and search page.
		cy.visit('/');
		cy.contains('.site-content article h2', 'Password Protected').should('exist');
		cy.visit('/?s=Password+Protected');
		cy.contains('.site-content article h2', 'Password Protected').should('exist');

		cy.get('#wp-admin-bar-logout a').click({ force: true });

		// Logout user can see the post on front but not on search page.
		cy.visit('/');
		cy.contains('.site-content article h2', 'Password Protected').should('exist');
		cy.visit('/?s=Password+Protected');
		cy.contains('.site-content article h2', 'Password Protected').should('not.exist');

		cy.createUser();

		// subscriber can see the post on front and on search page.
		cy.visit('/');
		cy.contains('.site-content article h2', 'Password Protected').should('exist');
		cy.visit('/?s=Password+Protected');
		cy.contains('.site-content article h2', 'Password Protected').should('exist');
	});

	it('Can Search Product by Variation SKU', () => {
		cy.login();
		cy.activatePlugin('woocommerce', 'wpCli');
		cy.maybeEnableFeature('woocommerce');

		cy.updateWeighting({
			product: {
				'meta._variations_skus.value': {
					weight: 1,
					enabled: true,
				},
			},
		}).then(() => {
			cy.wpCli('elasticpress index --setup --yes');
			cy.visit('/?s=awesome-aluminum-shoes-variation-sku');
			cy.contains('.site-content article:nth-of-type(1) h2', 'Awesome Aluminum Shoes').should(
				'exist',
			);
		});
	});
});
