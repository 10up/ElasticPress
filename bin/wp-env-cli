#!/usr/bin/env node

const path = require('path');
const { spawn } = require('child_process');
const { readConfig } = require('@wordpress/env/lib/config');

function spawnCommandDirectly({ container, command, dockerComposeConfigPath }) {
	const composeCommand = [
		'-f',
		dockerComposeConfigPath,
		'exec -T',
		container,
		...command.split(' '), // The command will fail if passed as a complete string.
	];

	return new Promise((resolve, reject) => {
		const childProc = spawn('docker-compose', composeCommand, {
			stdio: 'inherit',
			shell: true,
		});
		childProc.on('error', reject);
		childProc.on('exit', (code) => {
			// Code 130 is set if the user tries to exit with ctrl-c before using
			// ctrl-d (so it is not an error which should fail the script.)
			if (code === 0 || code === 130) {
				resolve();
			} else {
				reject(code);
			}
		});
	});
}

const run = async () => {
	const configPath = path.resolve('.wp-env.json');
	const { dockerComposeConfigPath } = await readConfig(configPath);

	const container = process.argv[2];
	const command = process.argv.splice(3).join(' ');

	try {
		await spawnCommandDirectly({
			container,
			command,
			dockerComposeConfigPath,
		});
	} catch (errorCode) {
		process.exit(errorCode);
	}
};

run();
