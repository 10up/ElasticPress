/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/autosuggest.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/autosuggest.js":
/*!**********************************!*\
  !*** ./assets/js/autosuggest.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _jquery = __webpack_require__(/*! jquery */ "jquery");

var _jquery2 = _interopRequireDefault(_jquery);

var _window = __webpack_require__(/*! window */ "window");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Submit the search form
 * @param object $localInput
 */
function submitSearchForm($localInput) {
	$localInput.closest('form').submit();
}

/**
 * Take selected item and fill the search input
 * @param event
 */
function selectAutosuggestItem($localInput, text) {
	$localInput.val(text);
}

/**
 * Navigate to the selected item
 * @param event
 */
function goToAutosuggestItem($localInput, url) {
	return window.location.href = url;
}

/**
 * Respond to an item selection based on the predefined behavior.
 * If epas.action is set to "navigate", redirects the browser to the URL of the selected item
 * If epas.action is set to any other value (default "search"), fill in the value and perform the search
 *
 * @param $localInput
 * @param element
 */
function selectItem($localInput, element) {

	if (_window.epas.action === 'navigate') {
		return goToAutosuggestItem($localInput, element.dataset.url);
	}

	selectAutosuggestItem($localInput, element.innerText);
	submitSearchForm($localInput);
}

/**
 * Simple throttling function for waiting a set amount of time after the last keypress
 * So we don't overload the server with too many requests at once
 *
 * @param fn
 * @param delay
 * @returns {Function}
 */
function debounce(fn, delay) {
	var _this = this,
	    _arguments = arguments;

	var timer = null;

	return function () {
		var context = _this,
		    args = _arguments;

		window.clearTimeout(timer);

		timer = window.setTimeout(function () {
			fn.apply(context, args);
		}, delay);
	};
}

/**
 * Build the search query from the search text
 *
 * @param searchText
 * @returns object
 */
function buildSearchQuery(searchText, postType, postStatus, searchFields) {
	if (postType === 'all' || typeof postType === 'undefined' || postType === '') {
		postType = 'all';
	}

	if (postStatus === '') {
		postType = 'publish';
	}

	var query = {
		sort: [{
			_score: {
				order: 'desc'
			}
		}],
		query: {
			multi_match: {
				query: searchText,
				fields: searchFields
			}
		}

		// If we're specifying post types/statuses, do it in an array
	};if (typeof postType === 'string' && postType !== 'all') {
		postType = postType.split(',');
	}

	if (typeof postStatus === 'string') {
		postStatus = postStatus.split(',');
	}

	// Then add it as a filter to the end of the query
	query.post_filter = {
		bool: {
			must: [{
				terms: { post_status: postStatus }
			}]
		}
	};

	if (postType !== 'all') {
		query.post_filter.bool.must.push({
			terms: { 'post_type.raw': postType }
		});
	}

	return query;
}

/**
 * Build the ajax request
 *
 * @param query
 * @returns AJAX object request
 */
function esSearch(query) {

	// Fixes <=IE9 jQuery AJAX bug that prevents ajax request from firing
	_jquery2.default.support.cors = true;

	return _jquery2.default.ajax({
		url: _window.epas.endpointUrl,
		type: 'post',
		dataType: 'json',
		crossDomain: true,
		data: JSON.stringify(query)
	});
}

/**
 * Update the auto suggest box with new options or hide if none
 *
 * @param options
 * @return void
 */
function updateAutosuggestBox(options, $localInput) {
	var i,
	    itemString,
	    $localESContainer = $localInput.closest('.ep-autosuggest-container').find('.ep-autosuggest'),
	    $localSuggestList = $localESContainer.find('.autosuggest-list');

	$localSuggestList.empty();

	// Don't listen to potentially previously set items
	(0, _jquery2.default)('.autosuggest-item').off();

	if (options.length > 0) {
		$localESContainer.show();
	} else {
		$localESContainer.hide();
	}

	for (i = 0; i < options.length; ++i) {
		var text = options[i].text;
		var url = options[i].url;
		itemString = '<li><span class="autosuggest-item" data-search="' + text + '" data-url="' + url + '">' + text + '</span></li>';
		(0, _jquery2.default)(itemString).appendTo($localSuggestList);
	}

	// Listen to items to auto-fill search box and submit form
	(0, _jquery2.default)('.autosuggest-item').on('click', function (event) {
		selectItem($localInput, event.target);
	});

	$localInput.off('keydown');

	// Listen to the input for up and down navigation between autosuggest items
	$localInput.on('keydown', function (event) {
		if (event.keyCode === 38 || event.keyCode === 40 || event.keyCode === 13) {
			var $results = $localInput.closest('.ep-autosuggest-container').find('.autosuggest-list li');
			var $current = $results.filter('.selected');
			var $next;

			switch (event.keyCode) {
				case 38:
					// Up
					$next = $current.prev();
					break;
				case 40:
					// Down
					if (!$results.hasClass('selected')) {
						$results.first().addClass('selected');
						$next = $results.first();
					} else {
						$next = $current.next();
					}
					break;
				case 13:
					// Enter
					if ($results.hasClass('selected')) {
						selectItem($localInput, $current.children('span').get(0));
						return false;
					} else {
						// No item selected
						return;
					}
			}

			// only check next element if up and down key pressed
			if ($next.is('li')) {
				$current.removeClass('selected');
				$next.addClass('selected');
			} else {
				$results.removeClass('selected');
			}

			// keep cursor from heading back to the beginning in the input
			if (event.keyCode === 38) {
				return false;
			}

			return;
		}
	});
}

/**
 * Hide the auto suggest box
 *
 * @return void
 */
function hideAutosuggestBox() {
	(0, _jquery2.default)('.autosuggest-list').empty();
	(0, _jquery2.default)('.ep-autosuggest').hide();
}

// No host/index set
if (_window.epas.endpointUrl && _window.epas.endpointUrl !== '') {
	var $epInput = (0, _jquery2.default)('.ep-autosuggest, input[type="search"], .search-field');
	var $epAutosuggest = (0, _jquery2.default)('<div class="ep-autosuggest"><ul class="autosuggest-list"></ul></div>');

	/**
  * Build the auto-suggest container
  */
	$epInput.each(function (key, input) {
		var $epContainer = (0, _jquery2.default)('<div class="ep-autosuggest-container"></div>');
		var $input = (0, _jquery2.default)(input);

		// Disable autocomplete
		$input.attr('autocomplete', 'off');

		$epContainer.insertAfter($input);
		var $epLabel = $input.siblings('label');
		$input.closest('form').find('.ep-autosuggest-container').append($epLabel).append($input);

		$epAutosuggest.clone().insertAfter($input);

		$input.trigger('elasticpress.input.moved');
	});

	$epAutosuggest.css({
		top: $epInput.outerHeight() - 1,
		'background-color': $epInput.css('background-color')
	});

	/**
  * Singular bindings for up and down to prevent normal actions so we can use them to navigate
  * our autosuggest list
  * Listen to the escape key to close the autosuggest box
  */
	(0, _jquery2.default)($epInput).each(function (key, value) {
		(0, _jquery2.default)(value).on('keyup keydown keypress', function (event) {
			if (event.keyCode === 38 || event.keyCode === 40) {
				event.preventDefault();
			}
			if (event.keyCode === 27) {
				hideAutosuggestBox();
			}
		});
	});

	/**
  * Listen for any keyup events, throttle them to a min threshold of time
  * and then send them for a query to the Elasticsearch server
  *
  */
	$epInput.each(function (key, localInput) {
		var $localInput = (0, _jquery2.default)(localInput);
		$localInput.on('keyup', debounce(function (event) {
			if (event.keyCode === 38 || event.keyCode === 40 || event.keyCode === 13 || event.keyCode === 27) {
				return;
			}

			var val = $localInput.val();
			var query;
			var request;
			var postType = _window.epas.postType;
			var postStatus = _window.epas.postStatus;
			var searchFields = _window.epas.searchFields;

			if (val.length >= 2) {
				query = buildSearchQuery(val, postType, postStatus, searchFields);
				request = esSearch(query);

				request.done(function (response) {
					if (response._shards.successful > 0) {
						var usedPosts = {};
						var filteredObjects = [];

						_jquery2.default.each(response.hits.hits, function (index, element) {
							var text = element._source.post_title;
							var url = element._source.permalink;
							var postId = element._source.post_id;

							if (!usedPosts[postId]) {
								usedPosts[postId] = true;

								filteredObjects.push({
									'text': text,
									'url': url
								});
							}
						});

						if (filteredObjects.length === 0) {
							hideAutosuggestBox();
						} else {
							updateAutosuggestBox(filteredObjects, $localInput);
						}
					} else {
						hideAutosuggestBox();
					}
				});
			} else if (val.length === 0) {
				hideAutosuggestBox();
			}
		}, 200));
	});

	// Publically expose API
	window.epasAPI = {
		hideAutosuggestBox: hideAutosuggestBox,
		updateAutosuggestBox: updateAutosuggestBox,
		esSearch: esSearch,
		buildSearchQuery: buildSearchQuery
	};
}

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ }),

/***/ "window":
/*!*************************!*\
  !*** external "window" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = window;

/***/ })

/******/ });
//# sourceMappingURL=autosuggest.min.js.map